@model IEnumerable<ZeNerd.DAL.Context.Estoque>

@{
    /**/

    ViewBag.Title = "Controle de Estoque";
    Layout = "~/Views/Shared/_Layout.cshtml";

}


<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Movimentações Financeiras

        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Estoque</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <!-- Info boxes -->
        <div class="row">
            <div class="col-md-3 col-sm-6 col-xs-12">
                <div class="info-box" style="height: 129px;">
                    <span class="info-box-icon bg-green" style="height: 129px;"><i class="fa  fa-money"></i></span>
                    <div class="info-box-content">
                        <span class="info-box-text">Saldo Atual</span>
                        <span class="info-box-number">@Html.Raw(ViewBag.SaldoAtual)</span>
                    </div>
                    <!-- /.info-box-content -->
                </div>
                <!-- /.info-box -->



            </div>
            <div class="col-xs-12" style="width: 74%;
    height: 129px;
    background-color: white;
    padding: 1%;">

                <div class="progress-group">
                    <span class="progress-text">RECEITAS</span>
                    <span class="progress-number"><b>@Html.Raw(ViewBag.ItemReceitas)</b>/@Html.Raw(ViewBag.Total)</span>
                    <div class="progress sm">
                        <div class="progress-bar progress-bar-aqua" style="width: @Html.Raw(ViewBag.Receitas)%"></div>
                    </div>
                </div>
                <!-- /.progress-group -->
                <div class="progress-group">
                    <span class="progress-text">DESPESAS</span>
                    <span class="progress-number"><b>@Html.Raw(ViewBag.ItemDespesas)</b>/@Html.Raw(ViewBag.Total)</span>
                    <div class="progress sm">
                        <div class="progress-bar progress-bar-red" style="width: @Html.Raw(ViewBag.Despesas)%"></div>
                    </div>
                </div>


            </div>

            <!-- /.row -->
        </div>
        <!-- Main row -->

        <div class="row">
            <div class="col-md-12">
                <!-- Custom Tabs -->
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#tab_1" data-toggle="tab"><h4><b>Recebimentos</b></h4> </a></li>
                        <li><a href="#tab_2" data-toggle="tab"><h4><b>Despesas Fixas</b></h4> </a></li>
                        <li><a href="#tab_3" data-toggle="tab"><h4><b>Despesas Variáveis</b></h4> </a></li>
                        <li><a href="#tab_4" data-toggle="tab"><h4><b>Pessoas</b></h4> </a></li>
                        <li><a href="#tab_5" data-toggle="tab"><h4><b>Impostos</b></h4> </a></li>
                        <li><a href="#tab_6" data-toggle="tab"><h4><b>Transferências</b></h4> </a></li>
                        @*<li class="dropdown">
                                <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                    Dropdown <span class="caret"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Action</a></li>
                                    <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Another action</a></li>
                                    <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Something else here</a></li>
                                    <li role="presentation" class="divider"></li>
                                    <li role="presentation"><a role="menuitem" tabindex="-1" href="#">Separated link</a></li>
                                </ul>
                            </li>*@
                        <li class="pull-right"><a href="#" class="text-muted"><i class="fa fa-gear"></i></a></li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tab_1"
                            <p>
                                <button type="button" class="btn btn-success" data-toggle="modal" data-target="#modal-success">
                                    Lançar
                                </button>
                            </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EstCategoria.Descricao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Fornecedor.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Insumo.Descricao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Usuario.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Descricao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoUnidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Valor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NotaFiscal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataCriacao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataAtualizacao)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoMovimento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Pago)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DataVencimento)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EstCategoria.Descricao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fornecedor.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Insumo.Descricao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Usuario.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descricao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoUnidade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Valor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantidade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NotaFiscal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataCriacao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataAtualizacao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TipoMovimento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pago)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataVencimento)
            </td>
            <td>
                @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @style = "width:25%;", @class = "btn btn-warning fa fa-pencil" }) |
                 @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @style = "width:25%;", @class = "btn btn-info fa fa-search" }) |
                @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @style = "width:25%;", @class = "btn btn-danger fa fa-trash" })
            </td>
        </tr>
    }

    </table>



                        </div>
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="tab_2">
                            The European languages are members of the same family. Their separate existence is a myth.
                            For science, music, sport, etc, Europe uses the same vocabulary. The languages only differ
                            in their grammar, their pronunciation and their most common words. Everyone realizes why a
                            new common language would be desirable: one could refuse to pay expensive translators. To
                            achieve this, it would be necessary to have uniform grammar, pronunciation and more common
                            words. If several languages coalesce, the grammar of the resulting language is more simple
                            and regular than that of the individual languages.
                        </div>
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="tab_3">
                            Lorem Ipsum is simply dummy text of the printing and typesetting industry.
                            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,
                            when an unknown printer took a galley of type and scrambled it to make a type specimen book.
                            It has survived not only five centuries, but also the leap into electronic typesetting,
                            remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset
                            sheets containing Lorem Ipsum passages, and more recently with desktop publishing software
                            like Aldus PageMaker including versions of Lorem Ipsum.
                        </div>


                        <div class="tab-pane active" id="tab_4">
                            <b>How to use:</b>
                            <p>
                                Exactly like the original bootstrap tabs except you should use
                                the custom wrapper <code>.nav-tabs-custom</code> to achieve this style.
                            </p>
                            A wonderful serenity has taken possession of my entire soul,
                            like these sweet mornings of spring which I enjoy with my whole heart.
                            I am alone, and feel the charm of existence in this spot,
                            which was created for the bliss of souls like mine. I am so happy,
                            my dear friend, so absorbed in the exquisite sense of mere tranquil existence,
                            that I neglect my talents. I should be incapable of drawing a single stroke
                            at the present moment; and yet I feel that I never was a greater artist than now.
                        </div>
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="tab_5">
                            The European languages are members of the same family. Their separate existence is a myth.
                            For science, music, sport, etc, Europe uses the same vocabulary. The languages only differ
                            in their grammar, their pronunciation and their most common words. Everyone realizes why a
                            new common language would be desirable: one could refuse to pay expensive translators. To
                            achieve this, it would be necessary to have uniform grammar, pronunciation and more common
                            words. If several languages coalesce, the grammar of the resulting language is more simple
                            and regular than that of the individual languages.
                        </div>
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="tab_6">
                            Lorem Ipsum is simply dummy text of the printing and typesetting industry.
                            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,
                            when an unknown printer took a galley of type and scrambled it to make a type specimen book.
                            It has survived not only five centuries, but also the leap into electronic typesetting,
                            remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset
                            sheets containing Lorem Ipsum passages, and more recently with desktop publishing software
                            like Aldus PageMaker including versions of Lorem Ipsum.
                        </div>
                        <!-- /.tab-pane -->
                    </div>
                    <!-- /.tab-content -->
                </div>
                <!-- nav-tabs-custom -->
            </div>
            <!-- /.col -->

        </div>
        <!-- /.row -->
        <div class="row">
            <div class="col-md-12">

                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<!-- /.modal -->
<div class="modal modal-success fade" id="modal-success">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Lançamento Recebimento</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Create", "Estoque", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>Estoque</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TipoUnidade, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TipoUnidade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TipoUnidade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FornecedorId, "FornecedorId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("FornecedorId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FornecedorId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EstCategoriaId, "EstCategoriaId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("EstCategoriaId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EstCategoriaId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InsumoId, "InsumoId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("InsumoId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.InsumoId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NotaFiscal, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NotaFiscal, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NotaFiscal, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DataCriacao, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DataCriacao, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DataCriacao, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.TipoMovimento, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TipoMovimento, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TipoMovimento, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Pago, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Pago, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Pago, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.UsuarioId, "UsuarioId", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("UsuarioId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UsuarioId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DataVencimento, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DataVencimento, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DataVencimento, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Cadastrar" class="btn btn-success add" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline pull-left" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-outline">Save changes</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.table').DataTable()
            $('.table').DataTable({
                'paging': true,
                'lengthChange': false,
                'searching': false,
                'ordering': true,
                'info': true,
                'autoWidth': false
            })
        })
    </script>

    @Scripts.Render("~/bundles/dashboard2")
}