
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning



namespace ZeNerd.DAL.Context
{




    using System.Linq;



    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]

    public class FakeDatabaseContext : IDatabaseContext
    {

        public System.Data.Entity.DbSet<AspNetRoles> AspNetRoles { get; set; }

        public System.Data.Entity.DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }

        public System.Data.Entity.DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }

        public System.Data.Entity.DbSet<AspNetUsers> AspNetUsers { get; set; }

        public System.Data.Entity.DbSet<GrupoUsuario> GrupoUsuario { get; set; }

        public System.Data.Entity.DbSet<Menu> Menu { get; set; }

        public System.Data.Entity.DbSet<Morador> Morador { get; set; }

        public System.Data.Entity.DbSet<RotaDestino> RotaDestino { get; set; }

        public System.Data.Entity.DbSet<RotaFuga> RotaFuga { get; set; }

        public System.Data.Entity.DbSet<TipoDomicilio> TipoDomicilio { get; set; }

        public System.Data.Entity.DbSet<TipoEducacao> TipoEducacao { get; set; }

        public System.Data.Entity.DbSet<TipoEspecieDomicilioOcupado> TipoEspecieDomicilioOcupado { get; set; }

        public System.Data.Entity.DbSet<TipoEtinoRacial> TipoEtinoRacial { get; set; }

        public System.Data.Entity.DbSet<TipoFalaLinguaIndigena> TipoFalaLinguaIndigena { get; set; }

        public System.Data.Entity.DbSet<TipoLinguaPortuquesa> TipoLinguaPortuquesa { get; set; }

        public System.Data.Entity.DbSet<TipoParantesco> TipoParantesco { get; set; }

        public System.Data.Entity.DbSet<TipoPessoaIndigena> TipoPessoaIndigena { get; set; }

        public System.Data.Entity.DbSet<TipoQuilombolas> TipoQuilombolas { get; set; }

        public System.Data.Entity.DbSet<TipoRegistroCivil> TipoRegistroCivil { get; set; }

        public System.Data.Entity.DbSet<TipoSexo> TipoSexo { get; set; }

        public System.Data.Entity.DbSet<Usuario> Usuario { get; set; }

        public System.Data.Entity.DbSet<Usuarioold> Usuarioold { get; set; }


        public FakeDatabaseContext()
        {
            _changeTracker = null;
            _configuration = null;
            _database = null;


            AspNetRoles = new FakeDbSet<AspNetRoles>("Id");

            AspNetUserClaims = new FakeDbSet<AspNetUserClaims>("Id");

            AspNetUserLogins = new FakeDbSet<AspNetUserLogins>("LoginProvider", "ProviderKey", "UserId");

            AspNetUsers = new FakeDbSet<AspNetUsers>("Id");

            GrupoUsuario = new FakeDbSet<GrupoUsuario>("Id");

            Menu = new FakeDbSet<Menu>("Id");

            Morador = new FakeDbSet<Morador>("Id");

            RotaDestino = new FakeDbSet<RotaDestino>("Id");

            RotaFuga = new FakeDbSet<RotaFuga>("Id");

            TipoDomicilio = new FakeDbSet<TipoDomicilio>("Id");

            TipoEducacao = new FakeDbSet<TipoEducacao>("Id");

            TipoEspecieDomicilioOcupado = new FakeDbSet<TipoEspecieDomicilioOcupado>("Id");

            TipoEtinoRacial = new FakeDbSet<TipoEtinoRacial>("Id");

            TipoFalaLinguaIndigena = new FakeDbSet<TipoFalaLinguaIndigena>("Id");

            TipoLinguaPortuquesa = new FakeDbSet<TipoLinguaPortuquesa>("Id");

            TipoParantesco = new FakeDbSet<TipoParantesco>("Id");

            TipoPessoaIndigena = new FakeDbSet<TipoPessoaIndigena>("Id");

            TipoQuilombolas = new FakeDbSet<TipoQuilombolas>("Id");

            TipoRegistroCivil = new FakeDbSet<TipoRegistroCivil>("Id");

            TipoSexo = new FakeDbSet<TipoSexo>("Id");

            Usuario = new FakeDbSet<Usuario>("Id", "Nome", "Senha", "TipoUsuario", "StatusCadastro", "Ativo", "DataCriacao", "DataAtualizacao");

            Usuarioold = new FakeDbSet<Usuarioold>("Id", "Nome", "Senha", "TipoUsuario", "StatusCadastro", "Ativo", "DataCriacao", "DataAtualizacao");

        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }


        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }



        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        private System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        private System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        private System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }


    }

}
// </auto-generated>
