
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning



namespace ZeNerd.DAL.Context
{



    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]

    public class MenuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Menu>
    {
        public MenuConfiguration()
            : this("dbo")
        {
        }

        public MenuConfiguration(string schema)
        {

            ToTable("menu", schema);

            HasKey(x => x.Id);



            Property(x => x.Id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);

            Property(x => x.NameOption).HasColumnName(@"nameOption").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.Controller).HasColumnName(@"controller").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.Action).HasColumnName(@"action").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.Area).HasColumnName(@"area").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.ImageClass).HasColumnName(@"imageClass").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.ParentId).HasColumnName(@"parentId").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.IsParent).HasColumnName(@"isParent").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.Activeli).HasColumnName(@"activeli").HasColumnType("nvarchar(max)").IsOptional();

            Property(x => x.Status).HasColumnName(@"status").HasColumnType("nvarchar(max)").IsOptional();



        }
    }



}
// </auto-generated>
